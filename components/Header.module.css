/* my-app/components/Header.module.css */
.header {
  display: flex;
  /* justify-content: space-between; << We'll let children manage space for centering */
  align-items: center; 
  padding: 0.5rem 1.5rem; 
  background-color: var(--background-secondary);
  border-bottom: 1px solid var(--border-primary);
  /* Consider adding a fixed height if you prefer, but padding is often more flexible */
  /* height: 60px; */ /* Example fixed height */
  transition: background-color 0.3s ease, border-color 0.3s ease;
  
  /* --- LAYOUT & GAP FIX --- */
  flex-shrink: 0; /* Prevent header from shrinking */
  height: 65px; /* Define a fixed height for predictability */
  width: 100%;
  box-sizing: border-box; /* IMPORTANT: Fixes the 1px gap issue */

  /* The position:sticky, top, and z-index properties are no longer needed here */
}

.logoAndToggler {
  display: flex;
  align-items: center;
  gap: 1rem; /* Space between logo and mobile toggler if they are side-by-side */
  margin-right: auto; /* << PUSHES other content to the right, good for left-aligning logo */
  flex-shrink: 0; /* Prevent logo from shrinking if space is tight */
}

.logoContainer a {
  font-size: 1.5rem;
  font-weight: bold;
  text-decoration: none;
  color: var(--text-primary);
  transition: color 0.3s ease;
}

/* Styles for mobile menu button if you have them */
.mobileMenuButton {
  /* ... your existing styles for the hamburger button ... */
  display: none; /* Assuming it's hidden on desktop by default */
  /* THEME UPDATE: If your button has background/border/color, update those too */
  /* Example: background-color: transparent; color: var(--text-primary); border: none; */
}
/* Styles for hamburger icon lines if you have them */
.hamburgerIconLine {
  /* ... your existing styles ... */
  /* THEME UPDATE: Typically change background-color of these lines */
  /* Example: background-color: var(--text-primary); */
}


.navLinks { /* This is the container for Home, Submit Article, etc. */
  display: flex; 
  /* justify-content: center; */ /* Potentially redundant if ul uses margin: 0 auto */
  align-items: center;
  flex-grow: 1; 
}

.navLinks ul { 
  display: flex; /* Make the UL a flex container */
  align-items: center;
  list-style: none;
  padding: 0;
  margin: 0 auto; /* << Key for centering the UL */
  gap: 1.5rem; 
}

.navLinks li { /* If your nav items are in LIs */
  /* No specific styles needed here unless you had them */
}

.navLinks a, /* Target all states of the link */
.navLinks a:link,
.navLinks a:visited,
.navLinks a:hover,
.navLinks a:active {
  text-decoration: none !important; /* << FORCE NO DEFAULT UNDERLINE for all states */
}

.navLinks a { 
  color: var(--text-secondary);
  font-weight: 500;
  padding: 0.25rem 0.5rem; 
  position: relative; 
  transition: color 0.3s ease; 
  /* Ensure no other text-decoration is sneaking in */
}

.navLinks a:hover {
  color: var(--link-primary);
}

/* Animated Underline (ensure this is the one you want) */
.navLinks a::after {
  content: '';
  position: absolute;
  width: 100%;
  transform: scaleX(0); 
  height: 2px; 
  bottom: -2px; /* Adjust if it's too close or far from the text */
  left: 0;
  background-color: var(--link-primary);
  transform-origin: bottom right; 
  transition: transform 0.3s ease-out, background-color 0.3s ease;
}

.navLinks a:hover::after {
  transform: scaleX(1); 
  transform-origin: bottom left; 
}


.headerRightGroup { 
  display: flex;
  align-items: center;
  gap: 1rem; 
  margin-left: auto; /* << PUSHES this group to the far right */
  flex-shrink: 0; /* Prevent right group from shrinking if space is tight */
}

.searchContainer {
  /* No specific flex properties needed here if the form handles it */
}

.searchForm { 
  display: flex;
  align-items: center; 
}

.searchInput {
  padding: 0.6rem 0.75rem; 
  border: 1px solid var(--input-border);
  background-color: var(--input-bg);
  color: var(--input-text);
  border-radius: 4px; /* << Apply standard rounding to all corners */
  /* border-right: none; << REMOVE this if they are not flush */
  font-size: 0.9rem; 
  line-height: 1.2; 
  margin-right: 0.5rem; /* << Add margin if button is separate */
  transition: border-color 0.3s ease, background-color 0.3s ease, color 0.3s ease;
}
.searchInput:focus {
  border-color: var(--input-focus-border);
  outline: none; /* Remove default browser outline */
  box-shadow: 0 0 0 0.2rem rgba(var(--input-focus-border-rgb, 13,110,253), 0.25); /* Optional: add a focus shadow, needs --input-focus-border-rgb defined in globals or use a simpler shadow */
}

.searchButton { 
  padding: 0.6rem 1rem; 
  background-color: var(--button-primary-bg);
  color: var(--button-primary-text);
  border: 1px solid var(--button-primary-bg);
  border-radius: 4px; /* << Apply standard rounding to ALL corners */
  cursor: pointer;
  font-size: 0.9rem; 
  line-height: 1.2; 
  white-space: nowrap; 
  transition: background-color 0.3s ease, border-color 0.3s ease;
}
.searchButton:hover {
  background-color: var(--button-primary-hover-bg);
  border-color: var(--button-primary-hover-bg);
}


.authSection { 
  display: flex;
  align-items: center;
  gap: 0.75rem; /* Space between email and logout button */
}

.desktopAuth { /* If you use this class specifically and it's the one rendering */
 display: flex;
 align-items: center;
 gap: 0.75rem; /* Space between email and logout button */
}

/* REMOVE or COMMENT OUT the individual margin-left rules if using gap on parent */
/*
.authSection > a, 
.authSection > form > button, 
.desktopAuth > a,
.desktopAuth > form > button {
  margin-left: 0.75rem; 
}
*/

.userEmail {
  /* No specific margin needed if gap on parent is sufficient */
  white-space: nowrap; 
  color: var(--text-secondary);
  transition: color 0.3s ease;
}


.authSection > form,
.desktopAuth > form { /* Ensure form itself doesn't add extra space and aligns items */
  margin: 0;
  padding: 0;
  display: flex; /* This helps if the button inside needs alignment */
  align-items: center;
}

/* Ensure links and button themselves don't have unwanted margins that interfere with gap */
.navLink, /* For Profile, Settings */
.navButton { /* For Logout */
  text-decoration: none;
  color: var(--link-primary);
  font-weight: 500;
  white-space: nowrap;
  margin: 0; /* Reset any default margins on these elements themselves */
  padding: 0; /* Reset padding, rely on parent for spacing or add minimal if needed for click area */
  transition: color 0.3s ease;
}
.navLink:hover,
.navButton:hover {
  text-decoration: underline;
  color: var(--link-hover);
}


/* Mobile Nav Styles - Keep whatever you had that was working for mobile */
.mobileNav {
  /* ... your existing mobile nav styles ... */
  display: none; /* Assuming hidden on desktop */
  /* THEME UPDATE: If this has background/text, update it */
  /* Example: background-color: var(--background-secondary); */
}
.navLinkMobile {
 /* ... */
  /* THEME UPDATE: color: var(--text-secondary); */
}
.signOutButtonMobile {
 /* ... */
  /* THEME UPDATE: Similar to .logoutButton or .searchButton */
}
.userEmailMobile {
 /* ... */
  /* THEME UPDATE: color: var(--text-secondary); */
}


/* Media query for mobile - this is where you'd show mobileMenuButton and mobileNav */
@media (max-width: 768px) { /* Adjust breakpoint as needed */
  .navLinks, .desktopAuth, .searchContainer /* Hide desktop elements */ {
    display: none;
  }
  .mobileMenuButton {
    display: block; /* Or flex, inline-block, etc. */
  }
  /* If mobileNav is conditionally rendered in JSX, you might not need to set display here */
  /* .mobileNav { display: flex; flex-direction: column; ... } */
}

.logoutButton {
  padding: 0.6rem 1rem; /* Match search button padding */
  background-color: var(--button-secondary-bg);
  color: var(--button-secondary-text);
  border: 1px solid var(--button-secondary-bg);
  border-radius: 4px; /* Standard button rounding */
  cursor: pointer;
  font-size: 0.9rem;   /* Match search button font size */
  line-height: 1.2;    /* Match search button line height */
  white-space: nowrap;
  /* margin-left: 0.75rem; */ /* Gap on parent handles this now */
  transition: background-color 0.3s ease, border-color 0.3s ease;
}
.logoutButton:hover {
  background-color: var(--button-secondary-hover-bg);
  border-color: var(--button-secondary-hover-bg);
}

/* General button style (can be used for Login button too if desired) */
.buttonStyle {
  padding: 0.6rem 1rem;
  background-color: var(--button-primary-bg);
  color: var(--button-primary-text);
  border: 1px solid var(--button-primary-bg);
  border-radius: 4px;
  text-decoration: none; /* For Link components styled as buttons */
  font-size: 0.9rem;
  line-height: 1.2;
  white-space: nowrap;
  transition: background-color 0.3s ease, border-color 0.3s ease;
}
.buttonStyle:hover {
  background-color: var(--button-primary-hover-bg);
  border-color: var(--button-primary-hover-bg);
  text-decoration: none; /* For Link components styled as buttons */
}