.sidebar {
  background-color: var(--background-secondary);
  border-right: 1px solid var(--border-primary);
  width: 250px; /* Fixed width for the sidebar */
  flex-shrink: 0; /* Prevent sidebar from shrinking */
  padding: 1.5rem;
  transition: transform 0.3s ease-in-out, width 0.3s ease-in-out;
  z-index: 1020;
}

.sidebar.collapsed {
  width: 80px;
}
.sidebar.collapsed .navSectionTitle {
  opacity: 0;
  height: 0;
  overflow: hidden;
  margin: 0;
  padding: 0;
  transition: opacity 0.2s ease, height 0.3s ease, margin 0.3s, padding 0.3s;
}
.sidebar.collapsed .navLink,
.sidebar.collapsed .signOutButton {
  justify-content: center;
}
.sidebar.collapsed .navLabel { /* Hide text label */
  opacity: 0;
  width: 0;
  overflow: hidden;
  white-space: nowrap;
}

.sidebarHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-bottom: 1rem;
  margin-bottom: 1rem;
  border-bottom: 1px solid var(--border-secondary);
  font-weight: bold;
}

.nav {
  display: flex;
  flex-direction: column;
  gap: 1.5rem; /* Space between nav sections */
}

.navList {
  list-style: none;
  padding: 0;
  margin: 0;
  display: flex;
  flex-direction: column;
  gap: 0.75rem; /* Space between items in a list */
}

.navSectionTitle {
    font-size: 0.8rem;
    font-weight: bold;
    color: var(--text-tertiary);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    padding: 0 0.5rem;
    margin-bottom: 0.5rem;
}

.navLink {
  color: var(--text-secondary);
  text-decoration: none;
  display: block;
  padding: 0.5rem 1rem;
  border-radius: 4px;
  transition: background-color 0.2s ease, color 0.2s ease;
}

.navLink:hover {
  background-color: var(--background-hover);
  color: var(--text-primary);
}

.navLink.active {
  background-color: var(--background-accent);
  color: var(--text-primary);
  font-weight: bold;
}

.navLink span:last-child, .signOutButton span:last-child {
  transition: opacity 0.2s ease, width 0.3s ease;
}

.navLabel {
  transition: opacity 0.2s ease, width 0.2s ease;
  white-space: nowrap; /* Prevent wrapping during transition */
}

.navIcon {
  display: inline-flex;
  align-items: center;
  margin-right: 0.75rem; /* Space between icon and text */
}

.signOutForm {
    margin: 0;
    padding: 0;
}

.signOutButton {
    /* Inherit styling from navLink for consistency */
    width: 100%;
    text-align: left;
    background: none;
    border: none;
    cursor: pointer;
    color: var(--text-secondary);
    text-decoration: none;
    display: block;
    padding: 0.5rem 1rem;
    border-radius: 4px;
    transition: background-color 0.2s ease, color 0.2s ease;
    font-size: inherit; /* Ensure font size matches links */
    font-family: inherit;
}
.signOutButton:hover {
    background-color: var(--background-hover);
    color: var(--text-primary);
}


/* --- Mobile & Tablet Styles --- */
@media (max-width: 1024px) {
  .sidebar {
    position: fixed; /* Take it out of the document flow */
    top: 0;
    left: 0;
    bottom: 0;
    height: 100vh;
    transform: translateX(-100%); /* Hide it off-screen by default */
    border-right: 1px solid var(--border-primary); /* Keep border */
  }

  /*
    FIX: Changed selector from `.sidebar.open` to just `.open`
    This correctly targets the class name added by the component when `isOpen` is true.
  */
  .open {
    transform: translateX(0); /* Slide it in when open */
  }
}
